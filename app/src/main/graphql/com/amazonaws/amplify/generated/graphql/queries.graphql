# this is an auto generated file. This will be overwritten
query SearchUsers(
  $filter: SearchableUserFilterInput
  $sort: [SearchableUserSortInput]
  $limit: Int
  $nextToken: String
  $from: Int
  $aggregates: [SearchableUserAggregationInput]
) {
  searchUsers(
    filter: $filter
    sort: $sort
    limit: $limit
    nextToken: $nextToken
    from: $from
    aggregates: $aggregates
  ) {
    items {
      id
      Userid
      Name
      Email
      Whatsappno
      Photo
      LastSync
      CallLogs {
        nextToken
        startedAt
      }
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    total
    aggregateItems {
      name
      result {
        ... on SearchableAggregateScalarResult {
          value
        }
        ... on SearchableAggregateBucketResult {
          buckets {
            key
            doc_count
          }
        }
      }
    }
  }
}
query SearchCallLogs(
  $filter: SearchableCallLogsFilterInput
  $sort: [SearchableCallLogsSortInput]
  $limit: Int
  $nextToken: String
  $from: Int
  $aggregates: [SearchableCallLogsAggregationInput]
) {
  searchCallLogs(
    filter: $filter
    sort: $sort
    limit: $limit
    nextToken: $nextToken
    from: $from
    aggregates: $aggregates
  ) {
    items {
      CalltimeAndChatterNumber
      id
      Duration
      Userid
      Chatid
      Datetime
      Direction
      user {
        id
        Userid
        Name
        Email
        Whatsappno
        Photo
        LastSync
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
      }
      chatter {
        ChatterId
        id
        Name
        CreatedByUser
        Photo
        Number
        Direction
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
      }
      Calltime
      CreatedByUser
      ChatterNumber
      Url
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    total
    aggregateItems {
      name
      result {
        ... on SearchableAggregateScalarResult {
          value
        }
        ... on SearchableAggregateBucketResult {
          buckets {
            key
            doc_count
          }
        }
      }
    }
  }
}
query SearchChatters(
  $filter: SearchableChatterFilterInput
  $sort: [SearchableChatterSortInput]
  $limit: Int
  $nextToken: String
  $from: Int
  $aggregates: [SearchableChatterAggregationInput]
) {
  searchChatters(
    filter: $filter
    sort: $sort
    limit: $limit
    nextToken: $nextToken
    from: $from
    aggregates: $aggregates
  ) {
    items {
      ChatterId
      id
      Name
      CreatedByUser
      Photo
      Number
      Direction
      CallLogs {
        nextToken
        startedAt
      }
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    total
    aggregateItems {
      name
      result {
        ... on SearchableAggregateScalarResult {
          value
        }
        ... on SearchableAggregateBucketResult {
          buckets {
            key
            doc_count
          }
        }
      }
    }
  }
}
query SearchWhatsappUsers(
  $filter: SearchableWhatsappUserFilterInput
  $sort: [SearchableWhatsappUserSortInput]
  $limit: Int
  $nextToken: String
  $from: Int
  $aggregates: [SearchableWhatsappUserAggregationInput]
) {
  searchWhatsappUsers(
    filter: $filter
    sort: $sort
    limit: $limit
    nextToken: $nextToken
    from: $from
    aggregates: $aggregates
  ) {
    items {
      id
      Userid
      Name
      Whatsappno
      Photo
      LastSync
      messages {
        nextToken
        startedAt
      }
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    total
    aggregateItems {
      name
      result {
        ... on SearchableAggregateScalarResult {
          value
        }
        ... on SearchableAggregateBucketResult {
          buckets {
            key
            doc_count
          }
        }
      }
    }
  }
}
query SearchWhatsappMessages(
  $filter: SearchableWhatsappMessagesFilterInput
  $sort: [SearchableWhatsappMessagesSortInput]
  $limit: Int
  $nextToken: String
  $from: Int
  $aggregates: [SearchableWhatsappMessagesAggregationInput]
) {
  searchWhatsappMessages(
    filter: $filter
    sort: $sort
    limit: $limit
    nextToken: $nextToken
    from: $from
    aggregates: $aggregates
  ) {
    items {
      id
      MessageId
      Userid
      Message
      File
      Chatid
      Sentbyid
      Ack
      Datetime
      Direction
      user {
        id
        Userid
        Name
        Whatsappno
        Photo
        LastSync
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
      }
      chatter {
        id
        Name
        Chatid
        CreatedByUserAndNumber
        Photo
        Number
        CreatedByUser
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
      }
      LastMessage
      CreatedByUser
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    total
    aggregateItems {
      name
      result {
        ... on SearchableAggregateScalarResult {
          value
        }
        ... on SearchableAggregateBucketResult {
          buckets {
            key
            doc_count
          }
        }
      }
    }
  }
}
query SearchWhatsappChatters(
  $filter: SearchableWhatsappChatterFilterInput
  $sort: [SearchableWhatsappChatterSortInput]
  $limit: Int
  $nextToken: String
  $from: Int
  $aggregates: [SearchableWhatsappChatterAggregationInput]
) {
  searchWhatsappChatters(
    filter: $filter
    sort: $sort
    limit: $limit
    nextToken: $nextToken
    from: $from
    aggregates: $aggregates
  ) {
    items {
      id
      Name
      Chatid
      CreatedByUserAndNumber
      Photo
      Number
      messages {
        nextToken
        startedAt
      }
      CreatedByUser
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    total
    aggregateItems {
      name
      result {
        ... on SearchableAggregateScalarResult {
          value
        }
        ... on SearchableAggregateBucketResult {
          buckets {
            key
            doc_count
          }
        }
      }
    }
  }
}
query GetUser($Userid: ID!) {
  getUser(Userid: $Userid) {
    id
    Userid
    Name
    Email
    Whatsappno
    Photo
    LastSync
    CallLogs {
      items {
        CalltimeAndChatterNumber
        id
        Duration
        Userid
        Chatid
        Datetime
        Direction
        Calltime
        CreatedByUser
        ChatterNumber
        Url
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
      }
      nextToken
      startedAt
    }
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
query ListUsers(
  $Userid: ID
  $filter: ModelUserFilterInput
  $limit: Int
  $nextToken: String
  $sortDirection: ModelSortDirection
) {
  listUsers(
    Userid: $Userid
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    sortDirection: $sortDirection
  ) {
    items {
      id
      Userid
      Name
      Email
      Whatsappno
      Photo
      LastSync
      CallLogs {
        nextToken
        startedAt
      }
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query SyncUsers(
  $filter: ModelUserFilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncUsers(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      id
      Userid
      Name
      Email
      Whatsappno
      Photo
      LastSync
      CallLogs {
        nextToken
        startedAt
      }
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query GetCallLogs($CalltimeAndChatterNumber: ID!) {
  getCallLogs(CalltimeAndChatterNumber: $CalltimeAndChatterNumber) {
    CalltimeAndChatterNumber
    id
    Duration
    Userid
    Chatid
    Datetime
    Direction
    user {
      id
      Userid
      Name
      Email
      Whatsappno
      Photo
      LastSync
      CallLogs {
        nextToken
        startedAt
      }
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    chatter {
      ChatterId
      id
      Name
      CreatedByUser
      Photo
      Number
      Direction
      CallLogs {
        nextToken
        startedAt
      }
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    Calltime
    CreatedByUser
    ChatterNumber
    Url
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
query ListCallLogs(
  $CalltimeAndChatterNumber: ID
  $filter: ModelCallLogsFilterInput
  $limit: Int
  $nextToken: String
  $sortDirection: ModelSortDirection
) {
  listCallLogs(
    CalltimeAndChatterNumber: $CalltimeAndChatterNumber
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    sortDirection: $sortDirection
  ) {
    items {
      CalltimeAndChatterNumber
      id
      Duration
      Userid
      Chatid
      Datetime
      Direction
      user {
        id
        Userid
        Name
        Email
        Whatsappno
        Photo
        LastSync
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
      }
      chatter {
        ChatterId
        id
        Name
        CreatedByUser
        Photo
        Number
        Direction
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
      }
      Calltime
      CreatedByUser
      ChatterNumber
      Url
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query SyncCallLogs(
  $filter: ModelCallLogsFilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncCallLogs(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      CalltimeAndChatterNumber
      id
      Duration
      Userid
      Chatid
      Datetime
      Direction
      user {
        id
        Userid
        Name
        Email
        Whatsappno
        Photo
        LastSync
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
      }
      chatter {
        ChatterId
        id
        Name
        CreatedByUser
        Photo
        Number
        Direction
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
      }
      Calltime
      CreatedByUser
      ChatterNumber
      Url
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query GetChatter($ChatterId: ID!) {
  getChatter(ChatterId: $ChatterId) {
    ChatterId
    id
    Name
    CreatedByUser
    Photo
    Number
    Direction
    CallLogs {
      items {
        CalltimeAndChatterNumber
        id
        Duration
        Userid
        Chatid
        Datetime
        Direction
        Calltime
        CreatedByUser
        ChatterNumber
        Url
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
      }
      nextToken
      startedAt
    }
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
query ListChatters(
  $ChatterId: ID
  $filter: ModelChatterFilterInput
  $limit: Int
  $nextToken: String
  $sortDirection: ModelSortDirection
) {
  listChatters(
    ChatterId: $ChatterId
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    sortDirection: $sortDirection
  ) {
    items {
      ChatterId
      id
      Name
      CreatedByUser
      Photo
      Number
      Direction
      CallLogs {
        nextToken
        startedAt
      }
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query SyncChatters(
  $filter: ModelChatterFilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncChatters(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      ChatterId
      id
      Name
      CreatedByUser
      Photo
      Number
      Direction
      CallLogs {
        nextToken
        startedAt
      }
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query GetWhatsappUser($Userid: ID!) {
  getWhatsappUser(Userid: $Userid) {
    id
    Userid
    Name
    Whatsappno
    Photo
    LastSync
    messages {
      items {
        id
        MessageId
        Userid
        Message
        File
        Chatid
        Sentbyid
        Ack
        Datetime
        Direction
        LastMessage
        CreatedByUser
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
      }
      nextToken
      startedAt
    }
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
query ListWhatsappUsers(
  $Userid: ID
  $filter: ModelWhatsappUserFilterInput
  $limit: Int
  $nextToken: String
  $sortDirection: ModelSortDirection
) {
  listWhatsappUsers(
    Userid: $Userid
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    sortDirection: $sortDirection
  ) {
    items {
      id
      Userid
      Name
      Whatsappno
      Photo
      LastSync
      messages {
        nextToken
        startedAt
      }
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query SyncWhatsappUsers(
  $filter: ModelWhatsappUserFilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncWhatsappUsers(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      id
      Userid
      Name
      Whatsappno
      Photo
      LastSync
      messages {
        nextToken
        startedAt
      }
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query GetWhatsappMessages($id: ID!) {
  getWhatsappMessages(id: $id) {
    id
    MessageId
    Userid
    Message
    File
    Chatid
    Sentbyid
    Ack
    Datetime
    Direction
    user {
      id
      Userid
      Name
      Whatsappno
      Photo
      LastSync
      messages {
        nextToken
        startedAt
      }
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    chatter {
      id
      Name
      Chatid
      CreatedByUserAndNumber
      Photo
      Number
      messages {
        nextToken
        startedAt
      }
      CreatedByUser
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    LastMessage
    CreatedByUser
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
query ListWhatsappMessages(
  $filter: ModelWhatsappMessagesFilterInput
  $limit: Int
  $nextToken: String
) {
  listWhatsappMessages(filter: $filter, limit: $limit, nextToken: $nextToken) {
    items {
      id
      MessageId
      Userid
      Message
      File
      Chatid
      Sentbyid
      Ack
      Datetime
      Direction
      user {
        id
        Userid
        Name
        Whatsappno
        Photo
        LastSync
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
      }
      chatter {
        id
        Name
        Chatid
        CreatedByUserAndNumber
        Photo
        Number
        CreatedByUser
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
      }
      LastMessage
      CreatedByUser
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query SyncWhatsappMessages(
  $filter: ModelWhatsappMessagesFilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncWhatsappMessages(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      id
      MessageId
      Userid
      Message
      File
      Chatid
      Sentbyid
      Ack
      Datetime
      Direction
      user {
        id
        Userid
        Name
        Whatsappno
        Photo
        LastSync
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
      }
      chatter {
        id
        Name
        Chatid
        CreatedByUserAndNumber
        Photo
        Number
        CreatedByUser
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
      }
      LastMessage
      CreatedByUser
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query GetWhatsappChatter($CreatedByUserAndNumber: ID!) {
  getWhatsappChatter(CreatedByUserAndNumber: $CreatedByUserAndNumber) {
    id
    Name
    Chatid
    CreatedByUserAndNumber
    Photo
    Number
    messages {
      items {
        id
        MessageId
        Userid
        Message
        File
        Chatid
        Sentbyid
        Ack
        Datetime
        Direction
        LastMessage
        CreatedByUser
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
      }
      nextToken
      startedAt
    }
    CreatedByUser
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
query ListWhatsappChatters(
  $CreatedByUserAndNumber: ID
  $filter: ModelWhatsappChatterFilterInput
  $limit: Int
  $nextToken: String
  $sortDirection: ModelSortDirection
) {
  listWhatsappChatters(
    CreatedByUserAndNumber: $CreatedByUserAndNumber
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    sortDirection: $sortDirection
  ) {
    items {
      id
      Name
      Chatid
      CreatedByUserAndNumber
      Photo
      Number
      messages {
        nextToken
        startedAt
      }
      CreatedByUser
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query SyncWhatsappChatters(
  $filter: ModelWhatsappChatterFilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncWhatsappChatters(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      id
      Name
      Chatid
      CreatedByUserAndNumber
      Photo
      Number
      messages {
        nextToken
        startedAt
      }
      CreatedByUser
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
